setwd("~/Projetos-em-R/AvaliacaoRiscoDeCredito")
source("ClassTools.R")
str(Credit)
Credit <- read.csv("GermanCredit.csv", header = F, stringsAsFactors = F )
metaFrame <- data.frame(colNames, isOrdered, I(factOrder))
Credit <- fact.set(Credit, metaFrame)
source("ClassTools.R")
Credit <- read.csv("GermanCredit.csv", header = F, stringsAsFactors = F )
metaFrame <- data.frame(colNames, isOrdered, I(factOrder))
Credit <- fact.set(Credit, metaFrame)
toFactors <- c("Duration", "CreditAmount", "Age")
maxVals <- c(100, 1000000, 100)
facNames <- unlist(lapply(toFactors, function(x) paste(x, "_f", sep = "")))
Credit[, facNames] <- Map(function(x, y) quantize.num(Credit[, x], maxval = y), toFactors, maxVals)
str(Credit)
library(ggplot2)
lapply(colNames2, function(x){
if(is.factor(Credit[,x])) {
ggplot(Credit, aes_string(x)) +
geom_bar() +
facet_grid(. ~ CreditStatus) +
ggtitle(paste("Total de Credito Bom/Ruim por",x))}})
lapply(colNames2, function(x){
if(is.factor(Credit[,x]) & x != "CheckingAcctStat") {
ggplot(Credit, aes(CheckingAcctStat)) +
geom_bar() +
facet_grid(paste(x, " ~ CreditStatus"))+
ggtitle(paste("Total de Credito Bom/Ruim CheckingAcctStat e",x))
}})
library(randomForest)
modelo <- randomForest( CreditStatus ~ .
- Duration
- Age
- CreditAmount
- ForeignWorker
- NumberDependents
- Telephone
- ExistingCreditsAtBank
- PresentResidenceTime
- Job
- Housing
- SexAndStatus
- InstallmentRatePecnt
- OtherDetorsGuarantors
- Age_f
- OtherInstalments,
data = Credit,
ntree = 100, nodesize = 10, importance = T)
varImpPlot(modelo)
outFrame <- serList(list(credit.model = modelo))
